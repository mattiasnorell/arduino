
<html>
    <head>
        <title>Ugly Christmas Sweater Editor</title>
        <link href="https://fonts.googleapis.com/css?family=Quicksand" rel="stylesheet">
        <style type="text/css">
            body{
                font-family: 'Quicksand', sans-serif;
                font-size: 14px;
            }

            h1{
                text-align: center;
                font-size: 36px;
            }

            button{
                line-height: 24px;
                display: inline-block;
                background-color: #ccc;
                cursor: pointer;
            }

            .editor{
                position: relative;
                margin:0 auto;
                width: 600px;
                height: 400px;
                background: #ccc;
                background-image: url(editorbg.jpg)
            }

            .output{
                position: relative;
                margin:0 auto;
                width: 600px;
                max-height: 450px;
                background-color: #f6f6f6;
                padding: 20px;
                box-sizing: border-box;
            }

            .output .pattern-output{
                width: 100%;
                max-height: 200px;
                white-space:normal;
                overflow: auto;
                background-color: #fff;
                padding: 20px;
                box-sizing: border-box;
                margin-bottom: 20px;
            }

            .output .pattern-output::-webkit-scrollbar {
                -webkit-appearance: none;
                width: 5px;
            }

            .output .pattern-output::-webkit-scrollbar-thumb {
                border-radius: 4px;
                background-color: rgba(0,0,0,.5);
                box-shadow: 0 0 1px rgba(255,255,255,.5);
            }

            .output .pattern-output ul {
                list-style: none;
                padding: 0;
                margin: 0;
            }

            .output .pattern-output ul li{
                padding: 3px 0 3px 10px;
                border-top: 1px solid #ccc;
                line-height: 28px;
            }

            .output .pattern-output ul li:first-child{
                padding-top: 0;
                border-top: 0;
            }

            .output .pattern-output ul li.current{
                background-color: #f1f1f1;
            }

            .output .pattern-output ul li span:first-child{
                position: relative;
                float: left;
                width: 100px;
                font-size: 13px;
            }

            .output .pattern-output ul li span:last-child{
                position: relative;
            }

            #current-pattern{
                display: inline-block;
                padding: 0px 10px 0px 10px;
                background-color: #fff;
                text-align: center;
                line-height: 28px;
                border-radius: 4px; 
                
            }

            .input-checkbox{
                position: absolute;
            }
            
            .input-checkbox:checked{
                box-shadow: 0px 0px 15px yellow;
            }
            
            .input-checkbox-1{
                top: 13px;
                left: 410px;
            }

            .input-checkbox-2{
                top: 157px;
                left: 486px;
            }

            .input-checkbox-3{
                top: 193px;
                left: 507px;
            }

            .input-checkbox-4{
                top: 195px;
                left: 448px;
            }

            .input-checkbox-5{
                top: 207px;
                left: 414px;
            }

            .input-checkbox-6{
                top: 157px;
                left: 336px;
            }

            .input-checkbox-7{
                top: 329px;
                left: 362px;
            }

            .input-checkbox-8{
                top: 279px;
                left: 302px;
            }

            .input-checkbox-9{
                top: 257px;
                left: 234px;
            }

            .input-checkbox-10{
                top: 219px;
                left: 238px;
            }

            .input-checkbox-11{
                top: 184px;
                left: 202px;
            }

            .input-checkbox-12{
                top: 309px;
                left: 122px;
            }

            .input-checkbox-13{
                top: 198px;
                left: 62px;
            }

            .input-checkbox-14{
                top: 263px;
                left: 36px;            
            }
        </style>
    </head>

    <body>
        <h1>Ugly Christmas Sweater Editor</h1>
        <div class="editor"></div>

        <div class="output">
            
            <div class="pattern-output" id="pattern-output"></div>
           
            <button onclick="previousPattern()">Previous</button>
            <span id="current-pattern"></span>
            <button onclick="nextPattern()">Next</button>
            <button onclick="play()">Play</button>
            <button onclick="stop()">Stop</button>
            Speed: <input type="number" value="500" id="interval-speed">
            <hr/>
            <button onclick="addPattern()">Add pattern</button>
            <button onclick="clearPattern()">Clear pattern</button>
            <button onclick="removePattern()">Remove pattern</button>
            <button onclick="load()">Load</button>
            <button onclick="exportPatterns()">Export</button>
        </div>
    </body>

    <script>
        var pattern = new Array();
        var playInterval = null;
        var diodCount = 14;
        var currentPattern = 0;
        var maxPatterns = 8;


        function checkInputState(loopIndex, patternIndex){
            if(pattern.length <= 0 || pattern.length < loopIndex){
                return false;
            }

            if(pattern[loopIndex].length <= 0 || pattern[loopIndex].length < patternIndex){
                return false;
            }

            return pattern[loopIndex][patternIndex] === 1;
        }

        function createCheckbox(loopIndex, patternIndex, elementPrefix){
            var checkBox = document.createElement("input");
            checkBox.id = elementPrefix + "-" + (patternIndex + 1);
            checkBox.type = "checkbox";
            checkBox.checked = checkInputState(loopIndex, patternIndex);
            checkBox.classList.add(elementPrefix);
            checkBox.classList.add(elementPrefix + "-" + (patternIndex + 1));
            checkBox.addEventListener("change", function(){
                updatePattern(loopIndex, patternIndex, checkBox.checked);
            });

            return checkBox;
        }

        function init(){
            var editorContainer = document.querySelector(".editor");
            for(var i = 0; i < diodCount; i++){
  
                var checkBox = createCheckbox(null, i, "input-checkbox");
                
                editorContainer.appendChild(checkBox);
            }
    
            addPattern();
            update();
        }

        init();

        function update(){
            document.getElementById("current-pattern").innerText = (currentPattern + 1) + "/" + pattern.length;
            
            var sequencerWrapper = document.createElement("ul");

            for(var i = 0; i < pattern.length; i++){
                var sequencerRow = document.createElement("li");
                var sequencerRowLabel = document.createElement("span");
                var sequencerRowInputWrapper = document.createElement("span");
                
                sequencerRowLabel.innerText = "Pattern " + (i + 1)   + ":";
                sequencerRow.appendChild(sequencerRowLabel);

                for(var ii=0; ii<pattern[i].length;ii++){
                    
                    var checkBox = createCheckbox(i, ii, "sequencer-checkbox");
                    sequencerRowInputWrapper.appendChild(checkBox);
                }

                sequencerRow.appendChild(sequencerRowInputWrapper);
                sequencerWrapper.appendChild(sequencerRow);
            }

            document.getElementById("pattern-output").innerHTML = "";
            document.getElementById("pattern-output").appendChild(sequencerWrapper);

            updateSequencer();
            updateSequencerProgress();
        }

        function updateSequencerProgress(){
            var elements = document.querySelectorAll("#pattern-output ul li");

            [].forEach.call(elements, function(el) {
                el.classList.remove("current");
            });

            document.querySelector("#pattern-output ul li:nth-child("+ (currentPattern + 1) +")").classList.add("current");

        }

        function nextPattern(){
            currentPattern++;

            if(currentPattern > pattern.length -1 ){
                currentPattern = 0;
            }

            update();
        }

        function previousPattern(){
            currentPattern--;

            if(currentPattern < 0){
                currentPattern = pattern.length - 1;
            }

            update();
        }

        function play(){
            if(playInterval != null){
                return;
            }

            var playIntervalSpeed = parseInt(document.getElementById("interval-speed").value);

            playInterval = setInterval(function(){
                nextPattern();
            }, playIntervalSpeed);
        }

        function stop(){
            clearInterval(playInterval);
            playInterval = null;
        }

        function updatePattern(loopIndex, patternIndex, value){  
            if(loopIndex == null){
                loopIndex = currentPattern;
            }

            pattern[loopIndex][patternIndex] = value ? 1 : 0;
            update();
        }

        function addPattern(){ 
            if(pattern.length >= maxPatterns){
                return;
            }

            var model = [];

            for(var i = 0; i < diodCount;i++){
                model[i] = 0;
            }

            pattern[pattern.length] = model;
            currentPattern = pattern.length - 1;

            update();
        }

        function clearPattern(){
            pattern[currentPattern].forEach(function(v,i){
                pattern[currentPattern][i] = 0;
            });

            update();
        }

        function removePattern(){
            if(pattern.length <= 1){
                return;
            }

            pattern.splice(currentPattern, 1);
            previousPattern();
        }

        function load(){
            var input = prompt("Import JSON");
            pattern = JSON.parse(input);

            update();
        }

        function exportPatterns(){
            window.prompt("Copy to clipboard: ", JSON.stringify(pattern));
        }

        function updateSequencer(){
            if(pattern.length == 0){
                return;
            }
            
            for(var i = 0; i < pattern[currentPattern].length; i++){
                var patternItem = pattern[currentPattern][i];
                var inputElementId = "input-checkbox-" + (i + 1);
                
                document.getElementById(inputElementId).checked = patternItem === 1;
            }
        }
    </script>
</html>